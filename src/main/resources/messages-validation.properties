# -- Bean Validation
jakarta.validation.constraints.AssertFalse.message = must be false
jakarta.validation.constraints.AssertTrue.message  = must be true
jakarta.validation.constraints.DecimalMax.message  = must be less than ${inclusive == true ? 'or equal to ' : ''}{value}
jakarta.validation.constraints.DecimalMin.message  = must be greater than ${inclusive == true ? 'or equal to ' : ''}{value}
jakarta.validation.constraints.Digits.message      = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
jakarta.validation.constraints.Future.message      = must be in the future
jakarta.validation.constraints.Max.message         = must be less than or equal to {value}
jakarta.validation.constraints.Min.message         = must be greater than or equal to {value}
jakarta.validation.constraints.NotNull.message     = may not be null
jakarta.validation.constraints.Null.message        = must be null
jakarta.validation.constraints.Past.message        = must be in the past
jakarta.validation.constraints.Pattern.message     = must match "{regexp}"
jakarta.validation.constraints.Size.message        = size must be between {min} and {max}
jakarta.validation.constraints.NotBlank.message    = may not be empty

# -- Errors [Type]
typeMismatch.java.math.BigDecimal=input a number
typeMismatch.java.lang.Integer=input a number
typeMismatch.java.lang.Long=input a number
typeMismatch.java.time.LocalDate=input a date
typeMismatch.java.time.LocalDateTime=input a datetime
typeMismatch.java.time.LocalTime=input a time

# -- Errors [Exception]
error.Exception=A problem might occur in a server side.
error.EntityNotFoundException=Information was not found.
error.ServletRequestBinding=It is the format which is not appropriate.
error.HttpMediaTypeNotAcceptable=It is the media type that is not appropriate.
error.HttpMessageNotReadable=It is the format which is not appropriate.
error.HttpMediaTypeException=It is the format which is not appropriate.

# -- Errors [Domain]
error.domain.accountId=must be less than or equal to {max}
error.domain.idStr=must be less than or equal to {max}
error.domain.day=not a well-formed year [yyyyMMdd]
error.domain.currency=must be less than or equal to {max}
error.domain.mail=not a well-formed email address
error.domain.category=must be less than or equal to {max}
error.domain.name=must be less than or equal to {max}

error.domain.amount=numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
error.domain.absAmount=numeric value out of bounds (<{integer} digits>.<{fraction} digits> and abs expected)
error.domain.AbsAmount.zero=numeric value out of bounds (<{integer} digits>.<{fraction} digits> and abs expected)

# -- Errors [Application]

error.ActionStatusType.unprocessing=It is already treated information.
error.TimePoint.beforeEqualsDay=Please input after present.
error.TimePoint.afterEqualsDay=Please input the past now.

error.Cashflow.realizeDay=Do not reach an value day, it cannot come true.
error.Cashflow.beforeEqualsDay=Already reached an value day.
error.CashInOut.withdrawAmount=Exceed an amount of money.
error.CashInOut.afterEqualsDay=It is an event day of non-arrival.
error.CashInOut.beforeEqualsDay=Already reached an event day.
